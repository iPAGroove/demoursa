// URSA IPA ‚Äî v8.0 LazyLoad + Dynamic i18n + VIP Lock Blur + Profile + AutoCert + Firestore
import { db } from "./firebase.js";
import {
  collection,
  query,
  orderBy,
  limit,
  // startAfter, // <-- –ù–ï –ù–£–ñ–ù–û
  getDocs,
  doc,
  updateDoc,
  increment
} from "https://www.gstatic.com/firebasejs/10.12.5/firebase-firestore.js";
import { toggleTheme } from "./themes.js";

const SIGNER_API = "https://ursa-signer-239982196215.europe-west1.run.app/sign_remote";

// === ICONS ===
const ICONS = {
  // apps: "...", // <-- –ù–ï –ù–£–ñ–ù–û
  // games: "...", // <-- –ù–ï –ù–£–ñ–ù–û
  lang: {
    ru: "https://store-eu-par-3.gofile.io/download/direct/79e2512c-552c-4e1a-9b47-0cf1bcbfe556/IMG_9679.PNG",
    en: "https://store-eu-par-3.gofile.io/download/direct/79e2512c-552c-4e1a-9b47-0cf1bcbfe556/IMG_9679.PNG"
  },
  settings: "https://cdn-icons-png.flaticon.com/512/3524/3524659.png"
};

// === i18n ===
const I18N = {
  ru: {
    profile_title: "–ü—Ä–æ—Ñ–∏–ª—å URSA",
    search_ph: "–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é‚Ä¶", // <--- –ò–∑–º–µ–Ω–∏–ª –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
    install: "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å",
    hack_features: "–§—É–Ω–∫—Ü–∏–∏ –º–æ–¥–∞",
    not_found: "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
    empty: "–ü–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
    load_error: "–û—à–∏–±–∫–∞ Firestore",
    vip_only: "üîí –¢–æ–ª—å–∫–æ –¥–ª—è VIP",
    login_btn: "–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google",
    logout_btn: "–í—ã–π—Ç–∏",
    guest: "–ì–æ—Å—Ç—å",
    dash: "‚Äî",
    badge_free: "Free",
    badge_vip: "‚≠ê VIP",
    acc_status: "–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞:",
    acc_free: "Free",
    acc_vip: "VIP",
    cert_section: "üîè –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç",
    cert_state: "–°–æ—Å—Ç–æ—è–Ω–∏–µ:",
    cert_state_ok: "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω",
    cert_state_none: "‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω",
    cert_upload_btn: "üì§ –î–æ–±–∞–≤–∏—Ç—å / –û–±–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç",
    upgrade_btn: "üöÄ –ü–æ–¥–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å",
    vip_title: "VIP –°—Ç–∞—Ç—É—Å URSA",
    vip_desc: "üåü –ü–æ–ª—É—á–∏—Ç–µ VIP —Å—Ç–∞—Ç—É—Å –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–æ–¥–∞–º, —Å–∫—Ä—ã—Ç—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏ IPA.",
    vip_benefit1: "‚≠ê –î–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –º–æ–¥–∞–º",
    vip_benefit2: "‚ö° –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è",
    vip_benefit3: "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ Telegram",
    vip_price: "–¶–µ–Ω–∞: 4.99 USD / –º–µ—Å—è—Ü",
    vip_buy: "üí≥ –ö—É–ø–∏—Ç—å",
    signing_start: "üîÑ –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º IPA‚Ä¶",
    signing_ready: "‚úÖ –ì–æ—Ç–æ–≤–æ! –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è‚Ä¶",
    signing_need_cert: "‚ùå –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ –ø—Ä–æ—Ñ–∏–ª–µ",
    // --- –ù–æ–≤—ã–µ –∫–ª—é—á–∏ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–π ---
    collection_popular: "Popular",
    collection_updates: "Updates",
    // collection_apps: "Apps", // <-- –ù–ï –ù–£–ñ–ù–û
    // collection_games: "Games", // <-- –ù–ï –ù–£–ñ–ù–û
    badge_new: "New",
    badge_update: "Update"
  },
  en: {
    profile_title: "URSA Profile",
    search_ph: "Search by name‚Ä¶", // <--- –ò–∑–º–µ–Ω–∏–ª –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
    install: "Install",
    hack_features: "Hack Features",
    not_found: "Nothing found",
    empty: "No apps yet",
    load_error: "Firestore error",
    vip_only: "üîí VIP Only",
    login_btn: "Sign in with Google",
    logout_btn: "SignOut",
    guest: "Guest",
    dash: "‚Äî",
    badge_free: "Free",
    badge_vip: "‚≠ê VIP",
    acc_status: "Account Status:",
    acc_free: "Free",
    acc_vip: "VIP",
    cert_section: "üîè Certificate",
    cert_state: "Status:",
    cert_state_ok: "‚úÖ Uploaded",
    cert_state_none: "‚ùå Not uploaded",
    cert_upload_btn: "üì§ Add / Update Certificate",
    upgrade_btn: "üöÄ Upgrade Status",
    vip_title: "URSA VIP Status",
    vip_desc: "üåü Get VIP to unlock all mods, hidden features, and priority signing.",
    vip_benefit1: "‚≠ê Access to exclusive mods",
    vip_benefit2: "‚ö° Priority installation without wait",
    vip_benefit3: "üí¨ Direct Telegram support",
    vip_price: "Price: $4.99 / month",
    vip_buy: "üí≥ Buy",
    signing_start: "üîÑ Signing IPA‚Ä¶",
    signing_ready: "‚úÖ Done! Installation will start‚Ä¶",
    signing_need_cert: "‚ùå Upload your certificate in profile",
    // --- –ù–æ–≤—ã–µ –∫–ª—é—á–∏ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–π ---
    collection_popular: "Popular",
    collection_updates: "Updates",
    // collection_apps: "Apps", // <-- –ù–ï –ù–£–ñ–ù–û
    // collection_games: "Games", // <-- –ù–ï –ù–£–ñ–ù–û
    badge_new: "New",
    badge_update: "Update"
  }
};

let lang = (localStorage.getItem("ursa_lang") || (navigator.language || "ru").slice(0, 2)).toLowerCase();
if (!I18N[lang]) lang = "ru";
window.__t = (k) => (I18N[lang] && I18N[lang][k]) || k;

// === Dynamic i18n Apply ===
function applyI18n() {
  qsa("[data-i18n]").forEach((el) => {
    const key = el.getAttribute("data-i18n");
    if (key && I18N[lang][key]) el.textContent = I18N[lang][key];
  });
  qsa("[data-i18n-placeholder]").forEach((el) => {
    const key = el.getAttribute("data-i18n-placeholder");
    if (key && I18N[lang][key]) el.placeholder = I18N[lang][key];
  });
  // --- –£–¥–∞–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è #main-catalog-title ---
}

// === Helpers ===
const prettyBytes = (n) => (!n ? "" : `${(n / 1e6).toFixed(0)} MB`);
const escapeHTML = (s) => (s || "").replace(/[&<>"']/g, (m) => ({
  "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;"
}[m]));
const qs = (sel, root = document) => root.querySelector(sel);
const qsa = (sel, root = document) => Array.from(root.querySelectorAll(sel));

// === Normalize Firestore doc ===
// –î–æ–±–∞–≤–ª–µ–Ω firestoreId, installCount, createdAt, updatedAt
function normalize(doc, firestoreId) {
  const tags = Array.isArray(doc.tags)
    ? doc.tags
    : doc.tags
    ? String(doc.tags).split(",").map((s) => s.trim())
    : [];
  return {
    id: firestoreId || doc.ID || doc.id || "", // <--- ID –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è —Å—á–µ—Ç—á–∏–∫–∞
    name: doc.NAME || doc.name || "",
    bundleId: doc["Bundle ID"] || doc.bundleId || "",
    version: doc.Version || doc.version || "",
    minIOS: doc["minimal iOS"] || doc.minIOS || "",
    sizeBytes: doc.sizeBytes || 0,
    iconUrl: doc.iconUrl || "",
    downloadUrl: doc.DownloadUrl || doc.downloadUrl || "",
    features: doc.features || "",
    features_ru: doc.features_ru || "",
    features_en: doc.features_en || "",
    vipOnly: !!doc.vipOnly,
    tags: tags.map((t) => t.toLowerCase()),
    installCount: doc.installCount || 0,   // <--- –î–ª—è "Popular"
    createdAt: doc.createdAt || null,    // <--- –î–ª—è –±–µ–π–¥–∂–∞ "New" (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Timestamp)
    updatedAt: doc.updatedAt || null     // <--- –î–ª—è –±–µ–π–¥–∂–∞ "Update" (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Timestamp)
  };
}

// === –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –†–µ–Ω–¥–µ—Ä –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ (DOM-—ç–ª–µ–º–µ–Ω—Ç) ===
function renderCardElement(app, userStatus) {
  const el = document.createElement("article");
  el.className = "card";
  if (app.vipOnly && userStatus !== "vip") el.classList.add("vip-locked");

  // --- –õ–æ–≥–∏–∫–∞ –±–µ–π–¥–∂–µ–π "New" / "Update" ---
  let badge = null;
  const twoDaysAgo = new Date(Date.now() - 2 * 24 * 60 * 60 * 1000); // 48 —á–∞—Å–æ–≤
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ createdAt/updatedAt - —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã Timestamp
  const created = app.createdAt?.toDate ? app.createdAt.toDate() : null;
  const updated = app.updatedAt?.toDate ? app.updatedAt.toDate() : null;

  if (created && created > twoDaysAgo) {
    badge = __t("badge_new");
  }
  // –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ *–ø–æ—Å–ª–µ* —Å–æ–∑–¥–∞–Ω–∏—è –∏ *–Ω–µ–¥–∞–≤–Ω–æ*
  if (updated && updated > twoDaysAgo && (!created || updated.getTime() > created.getTime() + 60000)) { // +1 –º–∏–Ω—É—Ç–∞ –¥–æ–ø—É—Å–∫–∞
    badge = __t("badge_update");
  }
  
  if (badge) {
    el.dataset.badge = badge; // –ò—Å–ø–æ–ª—å–∑—É–µ–º data-–∞—Ç—Ä–∏–±—É—Ç –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ CSS
  }
  // --- –ö–æ–Ω–µ—Ü –ª–æ–≥–∏–∫–∏ –±–µ–π–¥–∂–µ–π ---

  el.innerHTML = `
    <div class="row">
      <div class="thumb">
        <img class="icon" src="${app.iconUrl}" alt="">
        ${app.vipOnly ? '<div class="vip-lock">üîí</div>' : ""}
      </div>
      <div>
        <h3>${escapeHTML(app.name)}${app.vipOnly ? ' <span style="color:#00b3ff">‚≠ê</span>' : ""}</h3>
        <div class="meta">${escapeHTML(app.bundleId || "")}</div>
        <div class="meta">v${escapeHTML(app.version || "")}${app.minIOS ? " ¬∑ iOS ‚â• " + escapeHTML(app.minIOS) : ""}${app.sizeBytes ? " ¬∑ " + prettyBytes(app.sizeBytes) : ""}</div>
      </div>
    </div>`;
  el.addEventListener("click", () => openModal(app));
  return el;
}

// === –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ===
function createCollectionElement(titleKey, apps, userStatus) {
  const collectionSection = document.createElement("section");
  collectionSection.className = "collection-block";

  const title = document.createElement("h2");
  title.className = "collection-title";
  title.textContent = __t(titleKey);
  collectionSection.appendChild(title);

  const scrollContainer = document.createElement("div");
  scrollContainer.className = "collection-scroll"; // <-- –≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Ç–µ–ø–µ—Ä—å grid-—Å–µ—Ç–∫–∞

  if (apps.length > 0) {
    apps.forEach(app => {
      scrollContainer.appendChild(renderCardElement(app, userStatus));
    });
  } else {
    scrollContainer.innerHTML = `<div style="opacity:.7;padding:20px 10px;">${__t("empty")}</div>`;
  }
  
  collectionSection.appendChild(scrollContainer);
  return collectionSection;
}

// === –ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –†–µ–Ω–¥–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ ===
// --- –§–£–ù–ö–¶–ò–Ø renderCatalog –£–î–ê–õ–ï–ù–ê ---

// === –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π ===
async function incrementInstallCount(appId) {
  if (!appId) return; // –ù–µ –º–æ–∂–µ–º –æ–±–Ω–æ–≤–∏—Ç—å, –µ—Å–ª–∏ –Ω–µ—Ç ID
  const appRef = doc(db, "ursa_ipas", appId);
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º `increment` –æ—Ç Firestore
    await updateDoc(appRef, {
      installCount: increment(1)
    });
    console.log(`Install count for ${appId} incremented.`);
  } catch (e) {
    console.warn("Could not update install count", e);
  }
}

// === –ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: Install IPA ===
async function installIPA(app) {
  const dl = document.getElementById("dl-buttons");
  dl.innerHTML = `<div style="opacity:.8;font-size:14px;">${__t("signing_start")}</div><progress id="sign-progress" max="100" value="30" style="width:100%;height:8px;margin-top:6px;border-radius:8px;"></progress>`;
  try {
    const signer_id = localStorage.getItem("ursa_signer_id");
    if (!signer_id) throw new Error(__t("signing_need_cert"));
    
    // --- –í–´–ó–´–í–ê–ï–ú –°–ß–ï–¢–ß–ò–ö ---
    if (app.id) incrementInstallCount(app.id); 
    // --- –ö–û–ù–ï–¶ ---

    const form = new FormData();
    form.append("ipa_url", app.downloadUrl);
    form.append("signer_id", signer_id);
    const res = await fetch(SIGNER_API, { method: "POST", body: form });
    const json = await res.json();
    if (!res.ok) throw new Error(json.detail || json.error || "Signer error");
    document.getElementById("sign-progress").value = 100;
    dl.innerHTML = `<div style="opacity:.9;font-size:14px;">${__t("signing_ready")}</div>`;
    setTimeout(() => (location.href = json.install_link), 900);
  } catch (err) {
    dl.innerHTML = `<div style="opacity:.9;color:#ff6;">‚ùå ${err.message || err}</div>`;
  }
}
window.installIPA = installIPA;

// === App Modal (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ===
const appModal = document.getElementById("modal");
function openModal(app) {
  // ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
  const userStatus = localStorage.getItem("ursa_status") || "free";
  qs("#app-icon").src = app.iconUrl || "";
  qs("#app-title").textContent = app.name || "";
  qs("#app-bundle").textContent = app.bundleId || "";
  qs("#app-info").textContent = `v${app.version || ""}${app.minIOS ? " ¬∑ iOS ‚â• " + app.minIOS : ""}${app.sizeBytes ? " ¬∑ " + prettyBytes(app.sizeBytes) : ""}`;

  const feats = (lang === "ru" ? app.features_ru : app.features_en) || app.features || "";
  const featList = feats ? feats.split(",").map((f) => f.trim()).filter(Boolean) : [];
  qs("#app-desc").innerHTML = featList.length
    ? `<div class="meta" style="margin-bottom:6px">${__t("hack_features")}</div><ul class="bullets">${featList.map((f) => `<li>${escapeHTML(f)}`).join("")}</ul>`
    : "";

  const dl = document.getElementById("dl-buttons");
  dl.innerHTML = "";
  if (app.vipOnly && userStatus !== "vip") {
    dl.innerHTML = `<div style="color:#ff6;">${__t("vip_only")}</div>`;
  } else if (app.downloadUrl) {
    const a = document.createElement("button");
    a.className = "btn";
    a.textContent = __t("install");
    a.onclick = () => installIPA(app);
    dl.appendChild(a);
  }

  appModal.classList.add("open");
  appModal.setAttribute("aria-hidden", "false");
  document.body.style.overflow = "hidden";
}
function closeModal() {
  appModal.classList.remove("open");
  appModal.setAttribute("aria-hidden", "true");
  document.body.style.overflow = "";
}
appModal.addEventListener("click", (e) => {
  if (e.target === appModal || e.target.hasAttribute("data-close") || e.target.closest("[data-close]")) closeModal();
});
document.addEventListener("keydown", (e) => {
  if (e.key === "Escape" && appModal.classList.contains("open")) closeModal();
});

// === Profile Modal (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ===
window.openSettings = async function openSettings() {
  // ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
  const dlg = document.getElementById("settings-modal");
  const info = dlg.querySelector("#user-info");

  info.querySelector("#user-photo").src = localStorage.getItem("ursa_photo") || "assets/icons/avatar.png";
  info.querySelector("#user-name").textContent = localStorage.getItem("ursa_name") || __t("guest");
  info.querySelector("#user-email").textContent = localStorage.getItem("ursa_email") || __t("dash");

  const accLine = dlg.querySelector("#cert-account")?.closest("p");
  const expLine = dlg.querySelector("#cert-exp")?.closest("p");
  if (accLine) accLine.style.display = "none";
  if (expLine) expLine.style.display = "none";

  const status = localStorage.getItem("ursa_status") || "free";
  info.querySelector("#user-status").textContent = status === "vip" ? __t("badge_vip") : __t("badge_free");

  const hasSigner = !!localStorage.getItem("ursa_signer_id");
  info.querySelector("#cert-state").textContent = hasSigner ? __t("cert_state_ok") : __t("cert_state_none");

  const certBtn = info.querySelector("#cert-upload");
  certBtn.textContent = __t("cert_upload_btn");
  certBtn.onclick = () => {
    const modal = document.getElementById("signer-modal");
    modal.classList.add("open");
    modal.setAttribute("aria-hidden", "false");
  };

  const authBtn = info.querySelector("#auth-action");
  authBtn.textContent = localStorage.getItem("ursa_email") ? __t("logout_btn") : __t("login_btn");
  authBtn.onclick = () => window.ursaAuthAction && window.ursaAuthAction();

  const upgradeBtn = info.querySelector("#vip-upgrade");
  if (upgradeBtn) {
    upgradeBtn.textContent = __t("upgrade_btn");
    upgradeBtn.onclick = () => {
      const vip = document.getElementById("vip-modal");
      vip.classList.add("open");
      vip.setAttribute("aria-hidden", "false");
    };
  }

  dlg.classList.add("open");
  dlg.setAttribute("aria-hidden", "false");
  dlg.addEventListener("click", (e) => {
    if (e.target === dlg || e.target.hasAttribute("data-close") || e.target.closest("[data-close]")) {
      dlg.classList.remove("open");
      dlg.setAttribute("aria-hidden", "true");
    }
  });
};
// === Signer Modal (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ===
const signerModal = document.getElementById("signer-modal");
if (signerModal) {
  // ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
  signerModal.addEventListener("click", (e) => {
    if (e.target === signerModal || e.target.hasAttribute("data-close") || e.target.closest("[data-close]")) {
      signerModal.classList.remove("open");
      signerModal.setAttribute("aria-hidden", "true");
    }
  });

  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape" && signerModal.classList.contains("open")) {
      signerModal.classList.remove("open");
      signerModal.setAttribute("aria-hidden", "true");
    }
  });
}

// === –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞–≥—Ä—É–∑–∫–∞ "Popular" –∏ "Updates" ===
async function loadFeaturedCollections() {
  const container = document.getElementById('featured-collections');
  if (!container) return;
  container.innerHTML = `<div style="opacity:.7;padding:40px;text-align:center;">Loading...</div>`; // –ó–∞–≥–ª—É—à–∫–∞

  const userStatus = localStorage.getItem("ursa_status") || "free";

  try {
    // --- –ó–∞–≥—Ä—É–∑–∫–∞ Popular ---
    const popQuery = query(collection(db, "ursa_ipas"), orderBy("installCount", "desc"), limit(12)); // 12 = 4 —Ä—è–¥–∞ –ø–æ 3
    const popSnap = await getDocs(popQuery);
    const popApps = popSnap.docs.map(d => normalize(d.data(), d.id));
    
    // --- –ó–∞–≥—Ä—É–∑–∫–∞ Updates ---
    const updQuery = query(collection(db, "ursa_ipas"), orderBy("updatedAt", "desc"), limit(12)); // 12 = 4 —Ä—è–¥–∞ –ø–æ 3
    const updSnap = await getDocs(updQuery);
    const updApps = updSnap.docs.map(d => normalize(d.data(), d.id));
    
    // --- –û—á–∏—Å—Ç–∫–∞ –∏ –†–µ–Ω–¥–µ—Ä ---
    container.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    container.appendChild(createCollectionElement("collection_popular", popApps, userStatus));
    container.appendChild(createCollectionElement("collection_updates", updApps, userStatus));

  } catch (err) {
    console.error("Failed to load featured collections:", err);
    container.innerHTML = `<div style="opacity:.7;padding:20px 10px;">${__t("load_error")}</div>`;
  }
}


// === –ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –ó–ê–ì–†–£–ó–ö–ò ===
document.addEventListener("DOMContentLoaded", async () => {
  // document.getElementById("navAppsIcon").src = ICONS.apps; // <-- –£–î–ê–õ–ï–ù–û
  // document.getElementById("navGamesIcon").src = ICONS.games; // <-- –£–î–ê–õ–ï–ù–û
  document.getElementById("navLangIcon").src = ICONS.lang?.[lang] || ICONS.lang.ru;
  document.getElementById("navSettingsIcon").src = ICONS.settings;

  const search = document.getElementById("search");
  search.placeholder = __t("search_ph");
  
  // --- –£–î–ê–õ–ï–ù–ê –≤—Å—è –ª–æ–≥–∏–∫–∞ state, loadBatch, apply ---
  
  // --- –ù–æ–≤—ã–π, –ø—Ä–æ—Å—Ç–æ–π listener –¥–ª—è –ø–æ–∏—Å–∫–∞ (—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è DOM) ---
  search.addEventListener("input", (e) => {
    const q = e.target.value.trim().toLowerCase();
    // –ò—â–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤–æ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö
    const allCards = qsa("#featured-collections .card");
    
    allCards.forEach(card => {
      // –ò—â–µ–º –ø–æ H3 (–∏–º—è) –∏ .meta (bundleId - –æ–Ω —Å–∫—Ä—ã—Ç, –Ω–æ –µ—Å—Ç—å –≤ DOM)
      const name = card.querySelector("h3")?.textContent.toLowerCase() || "";
      const bundle = card.querySelector(".meta")?.textContent.toLowerCase() || "";
      const isVisible = name.includes(q) || bundle.includes(q);
      card.style.display = isVisible ? "" : "none";
    });
  });


  const bar = document.getElementById("tabbar");
  bar.addEventListener("click", (e) => {
    const btn = e.target.closest(".nav-btn");
    if (!btn) return;

    // --- –£–î–ê–õ–ï–ù–ê –ª–æ–≥–∏–∫–∞ –¥–ª—è data-tab ---
    
    if (btn.id === "lang-btn") {
      lang = lang === "ru" ? "en" : "ru";
      localStorage.setItem("ursa_lang", lang);
      document.getElementById("navLangIcon").src = ICONS.lang?.[lang] || ICONS.lang.ru;
      applyI18n(); // –ü—Ä–∏–º–µ–Ω—è–µ–º —è–∑—ã–∫
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º "Popular" –∏ "Updates" –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –±–µ–π–¥–∂–µ–π
      loadFeaturedCollections(); 
    } else if (btn.id === "settings-btn") {
      openSettings();
    }
  });

  // --- –£–î–ê–õ–ï–ù listener –¥–ª—è lazy-load (scroll) ---
  
  // === Initial load ===
  
  // 1. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–º–µ–Ω—è–µ–º —è–∑—ã–∫
  applyI18n();
  
  // 2. –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É "Popular" –∏ "Updates"
  loadFeaturedCollections(); 
  
  // 3. --- –£–î–ê–õ–ï–ù –≤—ã–∑–æ–≤ loadBatch() ---


  // === VIP Modal (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ===
  const vipModal = document.getElementById("vip-modal");
  if (vipModal) {
    // ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
    vipModal.addEventListener("click", (e) => {
      if (e.target === vipModal || e.target.hasAttribute("data-close") || e.target.closest("[data-close]")) {
        vipModal.classList.remove("open");
        vipModal.setAttribute("aria-hidden", "true");
      }
    });
    const buyBtn = vipModal.querySelector("#buy-vip");
    if (buyBtn) {
      buyBtn.onclick = () => {
        const tgLink = "tg://resolve?domain=Ursa_ipa";
        window.location.href = tgLink;
        setTimeout(() => {
          window.open("https://t.me/Ursa_ipa", "_blank");
        }, 1200);
      };
    }
  }

  document.getElementById("theme-toggle").addEventListener("click", toggleTheme);
});
