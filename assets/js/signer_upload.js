// URSA Signer Upload ‚Äî Firebase + Live Profile Update (v4.24 Fix Submit + Smooth UI)
import { getFirestore, doc, setDoc } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-firestore.js";
import { getStorage, ref, uploadBytes, getDownloadURL } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-storage.js";
import { getAuth } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-auth.js";

const db = getFirestore();
const storage = getStorage();
const auth = getAuth();

async function uploadSigner(event) {
  // üö´ –æ—Ç–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π submit —Ñ–æ—Ä–º—ã
  if (event) event.preventDefault();

  const p12File = document.getElementById("fileP12").files[0];
  const provFile = document.getElementById("fileProv").files[0];
  const pass = document.getElementById("certPass").value || "";
  const btn = document.getElementById("uploadBtn");
  const status = document.getElementById("uploadStatus");

  if (!p12File || !provFile) {
    status.textContent = "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–±–∞ —Ñ–∞–π–ª–∞ (.p12 –∏ .mobileprovision)";
    return;
  }

  btn.disabled = true;
  status.style.opacity = ".8";
  status.textContent = "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞‚Ä¶";

  try {
    const user = auth.currentUser;
    if (!user) throw new Error("–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω –≤—Ö–æ–¥");

    const uid = user.uid;
    const folder = `signers/${uid}/`;
    const p12Ref = ref(storage, folder + p12File.name);
    const provRef = ref(storage, folder + provFile.name);

    // üîº –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã
    await uploadBytes(p12Ref, p12File);
    await uploadBytes(provRef, provFile);

    // –ü–æ–ª—É—á–∞–µ–º download URL‚Äô—ã
    const [p12Url, provUrl] = await Promise.all([
      getDownloadURL(p12Ref),
      getDownloadURL(provRef)
    ]);

    // üß© –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å CN
    const cn = await extractCommonName(p12File);

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –≤ Firestore
    const signerRef = doc(db, "ursa_signers", uid);
    await setDoc(signerRef, {
      p12Url,
      provUrl,
      pass,
      createdAt: new Date().toISOString(),
      certCN: cn || "‚Äî"
    });

    // ‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
    localStorage.setItem("ursa_signer_id", uid);
    localStorage.setItem("ursa_cert_account", cn || "‚Äî");
    localStorage.setItem("ursa_cert_exp", new Date(Date.now() + 31536000000).toISOString());

    document.querySelector("#cert-state").textContent = "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω";
    document.querySelector("#cert-account").textContent = cn || "‚Äî";

    status.textContent = "‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!";
    status.style.opacity = "1";

    // üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å (–µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç)
    if (typeof window.openSettings === "function") {
      setTimeout(() => window.openSettings(), 400);
    }

    // ‚è± –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
    const signerModal = document.getElementById("signer-modal");
    setTimeout(() => {
      signerModal?.classList.remove("open");
      signerModal?.setAttribute("aria-hidden", "true");
    }, 2000);
  } catch (err) {
    console.error("Upload error:", err);
    status.style.opacity = "1";
    status.textContent = "‚ùå –û—à–∏–±–∫–∞: " + (err.message || "Upload failed");
  } finally {
    btn.disabled = false;
  }
}

// === –ò–∑–≤–ª–µ–∫–∞–µ—Ç CN (Common Name) –∏–∑ –±–∏–Ω–∞—Ä—è .p12 ===
async function extractCommonName(file) {
  try {
    const buffer = await file.arrayBuffer();
    const bytes = new Uint8Array(buffer);
    const text = new TextDecoder().decode(bytes);
    const match = text.match(/CN=([^,\n]+)/);
    return match ? match[1].trim() : null;
  } catch {
    return null;
  }
}

// === –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ ===
document.addEventListener("DOMContentLoaded", () => {
  const btn = document.getElementById("uploadBtn");
  if (btn) btn.addEventListener("click", uploadSigner);
  // üí° –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º submit —Ñ–æ—Ä–º—ã, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
  const form = btn?.closest("form");
  if (form) form.addEventListener("submit", uploadSigner);
});
