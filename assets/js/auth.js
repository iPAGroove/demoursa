// URSA Auth ‚Äî v7.5 (i18n RU/EN + Safe Double Login + AutoCert + Instant Logout + Live Profile Refresh)
import { auth, db } from "./firebase.js";
import {
  onAuthStateChanged,
  signInWithPopup,
  signInWithRedirect,
  GoogleAuthProvider,
  signOut,
  getRedirectResult
} from "https://www.gstatic.com/firebasejs/10.12.5/firebase-auth.js";
import { doc, getDoc, setDoc } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-firestore.js";

console.log("üî• URSA Auth v7.5 initialized");

// === Local i18n (–Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç app.js) ===
const AUTH_I18N = {
  ru: {
    step1_popup: "üîê –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ: –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–≤–æ–π–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–∞.\n–®–∞–≥ 1/2 ‚Äî –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ.",
    step2_ok: "‚úÖ –®–∞–≥ 2/2 ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–∞.",
    popup_fallback: "‚Ü™Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π –≤—Ö–æ–¥ (–®–∞–≥ 2/2). –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–π—Å—è –≤–∫–ª–∞–¥–∫–µ.",
    redirect_ok: "‚úÖ Redirect –≤—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω",
    logout_ok: "üö™ –í—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞",
    auth_not_ready: "‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤–∞",
    sync_err_user: "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç—è–Ω—É—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ Firestore",
    sync_err_signer: "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç—è–Ω—É—Ç—å signer",
    no_google: "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Google –≤—Ö–æ–¥",
  },
  en: {
    step1_popup: "üîê Please wait: performing double-check sign-in.\nStep 1/2 ‚Äî sign in via popup.",
    step2_ok: "‚úÖ Step 2/2 ‚Äî security check passed.",
    popup_fallback: "‚Ü™Ô∏è Falling back to secure sign-in (Step 2/2). Continue in the opened tab.",
    redirect_ok: "‚úÖ Redirect sign-in succeeded",
    logout_ok: "üö™ Signed out",
    auth_not_ready: "‚ùå Auth not ready yet",
    sync_err_user: "‚ö†Ô∏è Failed to fetch user profile from Firestore",
    sync_err_signer: "‚ö†Ô∏è Failed to fetch signer",
    no_google: "‚ùå Could not start Google sign-in",
  }
};
function langCode() {
  const l = (localStorage.getItem("ursa_lang") || (navigator.language || "ru")).slice(0,2).toLowerCase();
  return AUTH_I18N[l] ? l : "ru";
}
function t(key) {
  const l = langCode();
  return (AUTH_I18N[l] && AUTH_I18N[l][key]) || (AUTH_I18N.ru[key] || key);
}

// === Helper: safe set local storage ===
function setLocal(key, val) {
  try { localStorage.setItem(key, val ?? ""); } catch { /* ignore */ }
}
function removeLocal(key) {
  try { localStorage.removeItem(key); } catch { /* ignore */ }
}
function clearLocalAll() {
  try { localStorage.clear(); } catch { /* ignore */ }
}

// === Wait for user (guards SSR/slow auth) ===
const waitForAuth = () =>
  new Promise((resolve) => {
    const unsub = onAuthStateChanged(auth, (user) => {
      if (user) { unsub(); resolve(user); }
    });
    setTimeout(() => resolve(auth.currentUser), 2500);
  });

// === Sync Firestore user + signer into localStorage ===
async function syncUser(u) {
  if (!u) u = await waitForAuth();
  if (!u) { console.error(t("auth_not_ready")); return; }

  // users/{uid}
  const userRef = doc(db, "users", u.uid);
  const snap = await getDoc(userRef);
  if (!snap.exists()) {
    await setDoc(userRef, {
      uid: u.uid,
      email: u.email || "",
      name: u.displayName || "",
      photo: u.photoURL || "",
      status: "free",
      created_at: new Date().toISOString()
    });
  }
  const data = snap.exists() ? snap.data() : { status: "free" };

  setLocal("ursa_uid", u.uid);
  setLocal("ursa_email", u.email || "");
  setLocal("ursa_photo", u.photoURL || "");
  setLocal("ursa_name", u.displayName || "");
  setLocal("ursa_status", data.status || "free");

  // ursa_signers/{uid} ‚Äî –∞–≤—Ç–æ–ø–æ–¥–≥—Ä—É–∑–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
  try {
    const signerRef = doc(db, "ursa_signers", u.uid);
    const signerSnap = await getDoc(signerRef);
    if (signerSnap.exists()) {
      const s = signerSnap.data();
      setLocal("ursa_signer_id", u.uid);
      setLocal("ursa_cert_account", s.account || "‚Äî");
      setLocal("ursa_cert_exp", s.expires || "");
      console.log("üìú Signer loaded from Firestore.");
    } else {
      removeLocal("ursa_signer_id");
      removeLocal("ursa_cert_account");
      removeLocal("ursa_cert_exp");
    }
  } catch (e) {
    console.warn(t("sync_err_signer") + ":", e);
  }

  // –û–±–Ω–æ–≤–∏–º UI, –µ—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç–∫—Ä—ã—Ç
  if (typeof window.openSettings === "function") window.openSettings();
}

// === Login / Logout entry ===
window.ursaAuthAction = async () => {
  const user = auth.currentUser;
  if (user) {
    await signOut(auth);
    console.log(t("logout_ok"));
    clearLocalAll();
    if (typeof window.openSettings === "function") window.openSettings();
    return;
  }

  const provider = new GoogleAuthProvider();
  provider.setCustomParameters({ prompt: "select_account" });

  try {
    console.log("üåê Sign-in via popup‚Ä¶");
    alert(t("step1_popup"));
    const res = await signInWithPopup(auth, provider);
    alert(t("step2_ok"));
    await syncUser(res.user);
  } catch (err) {
    console.warn("‚ö†Ô∏è Popup failed, fallback to redirect‚Ä¶", err);
    alert(t("popup_fallback"));
    try {
      await signInWithRedirect(auth, provider);
    } catch (e) {
      console.error(t("no_google"), e);
    }
  }
};

// === Redirect result (–≤—Ç–æ—Ä–æ–π —à–∞–≥ –¥–≤–æ–π–Ω–æ–≥–æ –≤—Ö–æ–¥–∞) ===
getRedirectResult(auth)
  .then(async (res) => {
    if (res && res.user) {
      console.log(t("redirect_ok"));
      await syncUser(res.user);
    }
  })
  .catch((err) => console.error("Redirect error:", err));

// === Global watcher ‚Äî –¥–µ—Ä–∂–∏–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø—Ä–æ—Ñ–∏–ª—å –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º –≤–∏–¥–µ ===
onAuthStateChanged(auth, async (user) => {
  if (user) {
    // –ü–æ–¥—Ç—è–Ω–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    try {
      const uref = doc(db, "users", user.uid);
      const usnap = await getDoc(uref);
      const status = usnap.exists() ? (usnap.data().status || "free") : "free";
      setLocal("ursa_uid", user.uid);
      setLocal("ursa_email", user.email || "");
      setLocal("ursa_photo", user.photoURL || "");
      setLocal("ursa_name", user.displayName || "");
      setLocal("ursa_status", status);
      console.log(`üë§ Active: ${user.email} (${status})`);
    } catch (e) {
      console.warn(t("sync_err_user") + ":", e);
    }

    // –ê–≤—Ç–æ–ø–æ–¥–≥—Ä—É–∑–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    try {
      const signerRef = doc(db, "ursa_signers", user.uid);
      const signerSnap = await getDoc(signerRef);
      if (signerSnap.exists()) {
        const s = signerSnap.data();
        setLocal("ursa_signer_id", user.uid);
        setLocal("ursa_cert_account", s.account || "‚Äî");
        setLocal("ursa_cert_exp", s.expires || "");
      } else {
        removeLocal("ursa_signer_id");
        removeLocal("ursa_cert_account");
        removeLocal("ursa_cert_exp");
      }
    } catch (e) {
      console.warn(t("sync_err_signer") + ":", e);
    }
  } else {
    // Signed out
    clearLocalAll();
    console.log("üëã Signed out");
  }

  // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç–∫—Ä—ã—Ç ‚Äî –ø–µ—Ä–µ—Ä–∏—Å—É–µ–º
  const dlg = document.getElementById("settings-modal");
  if (dlg?.classList.contains("open") && typeof window.openSettings === "function") {
    window.openSettings();
  }
});
