// signer.js ‚Äî –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å–∞–π—Ç–∞ —Å URSA Signer API (v5.2 CORS Proxy + OpenP12 Support)

// üîó –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã Cloud Run
const SIGNER_API = "https://ursa-signer-239982196215.europe-west1.run.app/sign_remote";
const SIGNER_PROXY = "https://ursa-signer-239982196215.europe-west1.run.app/get_signer";

async function installIPA(app) {
  const dl = document.getElementById("dl-buttons");
  dl.innerHTML = `<div style="opacity:.8;font-size:14px;">üîÑ –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º IPA‚Ä¶</div>`;

  try {
    // 1Ô∏è‚É£ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–≤–µ–∂–∏–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
    const resp = await fetch(SIGNER_PROXY);
    if (!resp.ok) throw new Error(`–û—à–∏–±–∫–∞ Firestore Proxy (${resp.status})`);
    const data = await resp.json();

    if (!data.signer) throw new Error("–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã.");

    // 2Ô∏è‚É£ –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–ª—è
    const signer = data.signer;
    const p12_url = signer.p12Url?.stringValue || "";
    const prov_url = signer.provUrl?.stringValue || "";
    let pass = signer.pass?.stringValue || "";

    if (!p12_url || !prov_url) throw new Error("–°—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.");
    if (!pass) console.log("‚ÑπÔ∏è –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±–µ–∑ –ø–∞—Ä–æ–ª—è (Open .p12)");

    // 3Ô∏è‚É£ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
    const form = new FormData();
    form.append("ipa_url", app.downloadUrl);
    form.append("password", pass);

    // 4Ô∏è‚É£ –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    const [p12Blob, provBlob] = await Promise.all([
      fetch(p12_url).then(r => r.ok ? r.blob() : Promise.reject("–û—à–∏–±–∫–∞ p12")),
      fetch(prov_url).then(r => r.ok ? r.blob() : Promise.reject("–û—à–∏–±–∫–∞ mobileprovision")),
    ]);

    form.append("p12", new File([p12Blob], "cert.p12"));
    form.append("mobileprovision", new File([provBlob], "profile.mobileprovision"));

    // 5Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–ø–∏—Å—å
    const res = await fetch(SIGNER_API, { method: "POST", body: form });
    const json = await res.json();
    if (!res.ok) throw new Error(json.detail || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∏ IPA");

    // 6Ô∏è‚É£ –í—Å—ë –≥–æ—Ç–æ–≤–æ ‚Äî –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É
    dl.innerHTML = `<div style="opacity:.9;font-size:14px;">‚úÖ –ì–æ—Ç–æ–≤–æ! –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è‚Ä¶</div>`;
    setTimeout(() => (window.location.href = json.install_link), 1200);
  } catch (err) {
    console.error("Signer error:", err);
    dl.innerHTML = `<div style="opacity:.9;color:#ff6;">‚ùå ${err.message}</div>`;
  }
}

window.installIPA = installIPA;
