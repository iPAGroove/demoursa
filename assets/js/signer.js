// signer.js ‚Äî –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å–∞–π—Ç–∞ —Å URSA Signer API (v5.3 ProxyFetch + OpenP12 Support)

const SIGNER_API = "https://ursa-signer-239982196215.europe-west1.run.app/sign_remote";
const SIGNER_PROXY = "https://ursa-signer-239982196215.europe-west1.run.app/get_signer";
const FILE_PROXY = "https://ursa-signer-239982196215.europe-west1.run.app/proxy_file?url=";

async function installIPA(app) {
  const dl = document.getElementById("dl-buttons");
  dl.innerHTML = `<div style="opacity:.8;font-size:14px;">üîÑ –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º IPA‚Ä¶</div>`;

  try {
    // üîπ 1. –ü–æ–ª—É—á–∞–µ–º signer –∏–∑ Cloud Run Proxy
    const resp = await fetch(SIGNER_PROXY);
    if (!resp.ok) throw new Error(`Signer API error ${resp.status}`);
    const data = await resp.json();

    if (!data.signer) throw new Error("–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");

    const signer = data.signer;
    const p12_url = signer.p12Url?.stringValue || "";
    const prov_url = signer.provUrl?.stringValue || "";
    let pass = signer.pass?.stringValue || "";

    if (!p12_url || !prov_url)
      throw new Error("–ù–µ –Ω–∞–π–¥–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã.");

    if (!pass) console.log("‚ÑπÔ∏è –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±–µ–∑ –ø–∞—Ä–æ–ª—è (open .p12)");

    // üîπ 2. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ Cloud Run File Proxy
    const [p12Blob, provBlob] = await Promise.all([
      fetch(FILE_PROXY + encodeURIComponent(p12_url)).then(r =>
        r.ok ? r.blob() : Promise.reject("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ p12")
      ),
      fetch(FILE_PROXY + encodeURIComponent(prov_url)).then(r =>
        r.ok ? r.blob() : Promise.reject("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .mobileprovision")
      ),
    ]);

    // üîπ 3. –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
    const form = new FormData();
    form.append("ipa_url", app.downloadUrl);
    form.append("password", pass);
    form.append("p12", new File([p12Blob], "cert.p12"));
    form.append("mobileprovision", new File([provBlob], "profile.mobileprovision"));

    // üîπ 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Cloud Run signer
    const res = await fetch(SIGNER_API, { method: "POST", body: form });
    const json = await res.json();

    if (!res.ok)
      throw new Error(json.detail || json.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∏ IPA");

    console.log("‚úÖ IPA –ø–æ–¥–ø–∏—Å–∞–Ω:", json);

    // üîπ 5. –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É
    dl.innerHTML = `<div style="opacity:.9;font-size:14px;">‚úÖ –ì–æ—Ç–æ–≤–æ! –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è‚Ä¶</div>`;
    setTimeout(() => (window.location.href = json.install_link), 1200);
  } catch (err) {
    console.error("Signer error:", err);
    dl.innerHTML = `<div style="opacity:.9;color:#ff6;">‚ùå ${err.message || err}</div>`;
  }
}

// —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ
window.installIPA = installIPA;
