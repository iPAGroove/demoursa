// URSA IPA ‚Äî Firestore-based Signer Integration (v3.9 No-Proxy Edition)
import { auth, db } from "./firebase.js";
import { doc, getDoc } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-firestore.js";

const SIGNER_API = "https://ursa-signer-239982196215.europe-west1.run.app/sign_remote";
const FILE_PROXY = "https://ursa-signer-239982196215.europe-west1.run.app/proxy_file?url=";

// === –ü–æ–¥–ø–∏—Å—å IPA ===
async function installIPA(app) {
  const dl = document.getElementById("dl-buttons");
  dl.innerHTML = `<div style="opacity:.8;font-size:14px;">üîÑ –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º IPA —á–µ—Ä–µ–∑ URSA Signer‚Ä¶</div>`;

  try {
    // üß© –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥
    const user = auth.currentUser;
    if (!user) throw new Error("–í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Google –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ IPA");
    const uid = user.uid;

    // üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –∏–∑ Firestore
    const ref = doc(db, "ursa_signers", uid);
    const snap = await getDoc(ref);
    if (!snap.exists()) throw new Error("–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.");

    const data = snap.data();
    const p12Url = data.p12Url;
    const provUrl = data.provUrl;
    const pass = data.pass || "";
    if (!p12Url || !provUrl) throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞.");

    // üîπ –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ Cloud Run proxy (—á—Ç–æ–±—ã –æ–±–æ–π—Ç–∏ CORS)
    const [p12Blob, provBlob] = await Promise.all([
      fetch(FILE_PROXY + encodeURIComponent(p12Url)).then(r => r.ok ? r.blob() : Promise.reject("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .p12")),
      fetch(FILE_PROXY + encodeURIComponent(provUrl)).then(r => r.ok ? r.blob() : Promise.reject("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .mobileprovision"))
    ]);

    // üîπ –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ Cloud Run
    const form = new FormData();
    form.append("ipa_url", app.downloadUrl);
    form.append("password", pass);
    form.append("p12", new File([p12Blob], "cert.p12"));
    form.append("mobileprovision", new File([provBlob], "profile.mobileprovision"));

    const res = await fetch(SIGNER_API, { method: "POST", body: form });
    const json = await res.json();

    if (!res.ok) throw new Error(json.detail || json.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∏ IPA");

    dl.innerHTML = `<div style="opacity:.9;font-size:14px;">‚úÖ –ü–æ–¥–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è‚Ä¶</div>`;
    setTimeout(() => (location.href = json.install_link), 900);
  } catch (err) {
    console.error("Signer error:", err);
    dl.innerHTML = `<div style="opacity:.9;color:#ff6;">‚ùå ${err.message || err}</div>`;
  }
}

window.installIPA = installIPA;
